#!/bin/bash

# set -x

# functions to make sure that fulcrum hinge is healthy on Debian variants

PHP_PINNED=7.4

# Stop using Ubuntu DNSMasq
if (sudo netstat -tulnp|egrep 'tcp.*53:53.*systemd-re'); then
  echo "Ubuntu by default runs DNSMasq."
  echo "Fulcrum Hinge requires it's own DNSMasq to run."
  read -p "Enter \"y\" to remove default Ubuntu DNSMasq to continue: " REMOVE_DNSMASQ

  if [ "y" == "$REMOVE_DNSMASQ" ]; then
    # install while we have networking
    sudo apt install -y crudini

    # get systemd-resolved out of the way
    sudo systemctl disable systemd-resolved
    sudo systemctl stop systemd-resolved
    sudo rm /etc/resolv.conf

    # have NetworkManager use default dns
    sudo crudini --set /etc/NetworkManager/NetworkManager.conf main dns default
    sudo systemctl restart NetworkManager
  else
    echo "Exiting install, Fulcrum Hinge cannot work without removing DNSMasq"
    exit 1
  fi

else
  echo "Port 53 available"
fi

# install docker if needed
if (which docker > /dev/null); then
  echo "docker exists"
else
  echo "installing docker"
  sudo apt install -y apt-transport-https
  wget -q -O - https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  sudo apt update
  sudo apt install -y docker-ce
fi

# install docker-compose if needed
if (which docker-compose > /dev/null); then
  echo "docker-compose exists"
else
  echo "installing docker-compose"
  sudo wget -q -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m`
  sudo chmod +x /usr/local/bin/docker-compose
fi

# install aws cli if needed/wanted
if (which aws > /dev/null); then
  echo "aws exists"
else
  echo "installing aws"
  sudo apt install -y awscli
  aws configure
fi

# install certutil if needed
if (which certutil > /dev/null); then
  echo "certutil exists"
else
  echo "installing certutil"
  sudo apt install -y libnss3-tools
fi

# install ifconfig if needed, needed for multiple IP on loopback
if (which ifconfig > /dev/null); then
  echo "ifconfig exists"
else
  echo "installing ifconfig"
  sudo apt install -y net-tools
fi

# set an alias for localhost so xdebug can transmit back the IDE
# https://forums.docker.com/t/accessing-host-machine-from-within-docker-container/14248/14
# sudo ifconfig lo:0 down  - to remove
if [ -z "$(ifconfig lo:0 | grep 172.16.222.111)" ]; then
  sudo ifconfig lo:0 172.16.222.111 up
fi

# install php if needed
if (which php > /dev/null); then
  echo "php exists"
else
  echo "installing php"
  sudo apt install -y php$PHP_PINNED-cli
fi

# install php$PHP_PINNED-xml if needed
if (php -m|grep dom); then
  echo "php$PHP_PINNED-xml exists"
else
  echo "installing php$PHP_PINNED-xml"
    sudo apt install -y php$PHP_PINNED-xml
fi

# install php$PHP_PINNED-redis if needed
if (php -m|grep redis); then
  echo "php$PHP_PINNED-redis exists"
else
  echo "installing php$PHP_PINNED-redis"
    sudo apt install -y php$PHP_PINNED-redis
fi

# install php$PHP_PINNED-mysql if needed
if (php -m|grep mysql); then
  echo "php$PHP_PINNED-mysql exists"
else
  echo "installing php$PHP_PINNED-mysql"
    sudo apt install -y php$PHP_PINNED-mysql
fi

# install php$PHP_PINNED-curl if needed
if (php -m|grep curl); then
  echo "php$PHP_PINNED-curl exists"
else
  echo "installing php$PHP_PINNED-curl"
    sudo apt install -y php$PHP_PINNED-curl
fi

# install curl if needed
if (which curl > /dev/null); then
  echo "curl exists"
else
  echo "installing curl"
  sudo apt install -y curl
fi

# install composer if needed
if (which composer > /dev/null); then
  echo "composer exists"
else
  echo "installing composer"
  curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
  sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
  rm /tmp/composer-setup.php
fi
